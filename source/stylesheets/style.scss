//general colors
$custom-dark-gray: #6C6C73;
$customWhiteBackground: #F8F8F8;
$abortTextColor: #E390C3;
$winScreenTextColor: #A6A6AE;
$newGameBackgroundcolor: #21C3A8;
$footerTextColor: #9C9CAC;
$playerXStrokeColor: #3a3b63;
$playerOStrokeColor: #73dce6;

//colors when game is running
$gameBackgroundActive: #8A85BD;
$fieldOfGamefieldsBorderColorWhenGameIsRunning: #5D588F;
$singleGamefieldBorderColorWhenGameIsRunning: #746FA7;

//colors when game is NOT running
$gameBackgroundInactive: #ECECEE;
$fieldOfGamefieldsBorderColorWhenGameIsNotRunning: #BFBFC2;
$singleGamefieldBorderColorWhenGameIsNotRunning: #D6D6D9;

$gameBoxSize: 802px; //extra two px in order to avoid child elements with widths like 203.33px
$headerAndFooterHeight: 70px;
$paddingBetweenHeaderFooterAndGamefield: 20px;
$paddingAroundSingleGamefield: 15px;
$totalGameFieldSize: $gameBoxSize - 2*$headerAndFooterHeight - 2*$paddingBetweenHeaderFooterAndGamefield;
$borderWidth: 5px;
$singleGameFieldSize: ($totalGameFieldSize - $borderWidth * 2) / 3 - $paddingAroundSingleGamefield * 2;

html, body {
	font-family: "Segoe UI", "Letter Gothic Std", Arial, sans-serif;
	padding: 0;
	margin: 0;
	background-color: $custom-dark-gray;

	#app {
		display: grid;
		place-items: center;
		width: 100%;
		height: 100%;

		> div {
			display: grid;
			place-items: center;
			width: $gameBoxSize;
			height: $gameBoxSize;
			grid-gap: $paddingBetweenHeaderFooterAndGamefield;
			background-color: $gameBackgroundInactive;

			svg {
				&.playerX {
					stroke: $playerXStrokeColor;
				}

				&.playerO {
					stroke: $playerOStrokeColor;
				}
			}

			&.gameIsNotRunning {
				.header {
					grid-template-columns: auto;
					grid-template-rows: auto;
					grid-template-areas: "title";
				}

				.fieldOfGamefields {
					.singleGamefield {
						.field {
							div {
								&.empty {
									cursor: default;
								}

								svg {
									display: none;
								}
							}
						}
					}

					.winner {
						display: none;
					}
				}
			}

			&.gameIsRunning {
				.header {
					grid-template-columns: 100px auto 100px;
					grid-template-rows: auto;
					grid-template-areas: ". title abort";
				}

				.fieldOfGamefields {
					&.chooseAny {
						background-color: $fieldOfGamefieldsBorderColorWhenGameIsRunning;

						.singleGamefield {
							.field {
								background-color: $gameBackgroundActive;

								div {
									border-color: $singleGamefieldBorderColorWhenGameIsRunning;
								}
							}
						}
					}

					.singleGamefield {
						&.active {
							.field {
								background-color: $gameBackgroundActive;

								div {
									border-color: $singleGamefieldBorderColorWhenGameIsRunning;

									&.empty {
										cursor: pointer;
									}
								}
							}
						}

						&:not(.active) {
							>:not(.winner) {
								svg {
									stroke: $custom-dark-gray;
								}
							}
						}
					}
				}
			}

			.header, .footer {
				height: $headerAndFooterHeight;
				background-color: $customWhiteBackground;
				width: 100%;
			}

			.header {
				display: grid;
				place-items: center;

				.title {
					color: $custom-dark-gray;
					font-size: 2.6em;
					grid-area: title;
				}

				.abort {
					grid-area: abort;
					color: $abortTextColor;
					text-decoration: underline;
					cursor: pointer;
				}
			}

			.footer {
				color: $footerTextColor;
				font-size: 1.4em;
				display: grid;
				place-items: center;

				.newGame {
					background-color: $newGameBackgroundcolor;
					color: white;
					padding: 7px 50px;
					border-radius: 50px;
					cursor: pointer;
				}

				.userTurn {
					display: grid;
					grid-template-rows: auto;
					grid-template-columns: auto auto;
					place-items: center;

					svg {
						width: 40px;
						height: 40px;
					}
				}
			}

			.winScreen {
				display: grid;
				grid-template-areas: "." "winner" "aside";
				grid-template-columns: auto;
				grid-template-rows: auto min-content auto;
				justify-items: center;
				width: 100%;
				height: $totalGameFieldSize;
				grid-gap: 10px;
				font-size: 2.3em;
				color: $winScreenTextColor;

				.winner {
					grid-area: winner;

					svg {
						height: 160px;
						width: 100%;
					}
				}

				aside {
					grid-area: aside;
				}
			}

			.fieldOfGamefields {
				display: grid;
				grid-template-columns: 1fr 1fr 1fr;
				grid-template-rows: 1fr 1fr 1fr;
				place-items: center;
				width: $totalGameFieldSize;
				height: $totalGameFieldSize;
				overflow: hidden;
				grid-gap: $borderWidth;
				background-color: $fieldOfGamefieldsBorderColorWhenGameIsNotRunning;

				&.hide {
					display: none;
				}

				.singleGamefield {
					width: $singleGameFieldSize + $paddingAroundSingleGamefield * 2;
					height: $singleGameFieldSize + $paddingAroundSingleGamefield * 2;

					.field {
						width: $singleGameFieldSize;
						height: $singleGameFieldSize;
						position: relative;
						display: grid;
						grid-template-columns: 1fr 1fr 1fr;
						grid-template-rows: 1fr 1fr 1fr;
						place-items: center;
						overflow: hidden;
						grid-gap: $borderWidth;
						padding: $paddingAroundSingleGamefield;
						background-color: $gameBackgroundInactive;

						&.hide {
							display: none;
							color: #000000;
						}

						div {
							border: $borderWidth solid $singleGamefieldBorderColorWhenGameIsNotRunning;
							width: 100%;
							height: 100%;
							display: grid;
							place-items: center;
							font-weight: 900;
							font-size: 4em;

							&:nth-child(3n) {
								border-right: none;
							}

							&:nth-child(3n - 2) {
								border-left: none;
							}

							&:nth-last-child(-n + 3) {
								border-bottom: none;
							}

							&:nth-child(-n + 3) {
								border-top: none;
							}

							svg {
								width: 70%;
								height: auto;
							}
						}
					}

					&.hasBeenWon {
						.winner {
							position: relative;
							top: -($singleGameFieldSize + $paddingAroundSingleGamefield * 2);
							z-index: 2;
							opacity: 0.7;
							padding: $paddingAroundSingleGamefield;

							&.O {
								background-color: rgba(115, 220, 230, 0.5);
							}

							&.X {
								background-color: rgba(58, 59, 99, 0.5);
							}

							&.empty {
								height: 100%;
								width: 100%;
								background-color: rgba(200, 200, 200, 0.5);
							}
						}
					}
				}
			}
		}
	}
}